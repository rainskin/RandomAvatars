import "$"

// from botty import InlineKeyboard, UrlButton, CallbackButton, ReplyKeyboard

// BACK_BUTTON = CallbackButton("üîô –ù–∞–∑–∞–¥")

// export class Menu extends InlineKeyboard {
export class Menu extends InlineKeyboard {
  static ANIME_AVATARS = "‚õ© –ê–Ω–∏–º–µ –∞–≤—ã"
  static PAIRED_AVATARS = "üéé –ü–∞—Ä–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä–∫–∏"
  static CUTE_PICTURES = "üíñ –ú–∏–ª—ã–µ –ø–∏–∫—á–∏"
  static ANGRY_PICTURES = "üò° –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ"

  constructor(startGroupUrl: string) {
    super()
    this
      .text(Menu.ANIME_AVATARS).text(Menu.PAIRED_AVATARS).row()
      .text(Menu.CUTE_PICTURES).text(Menu.ANGRY_PICTURES).row()
      .url("üí¨ –î–æ–±–∞–≤–∏—Ç—å –≤ —á–∞—Ç", startGroupUrl)
  }
}

export class PictureMenu extends Keyboard {
  static GET_ANOTHER = "‚ôªÔ∏è –ï—â—ë"
  static BACK = "üîô –ú–µ–Ω—é"

  constructor() {
    super()
    this.text(PictureMenu.GET_ANOTHER).text(PictureMenu.BACK).resized()
  }
}

export const pictureMenu = new PictureMenu()

// class AdminMenu(InlineKeyboard):
//     BROADCAST = CallbackButton("üì© –†–∞—Å—Å—ã–ª–∫–∞")
//     REQUIRED_JOIN = CallbackButton("‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞")
//     UTM = CallbackButton("üè∑ UTM (–†–µ—Ñ–µ—Ä–∞–ª—ã)")
//     SIGNS = CallbackButton("‚úçÔ∏è –ü–æ–¥–ø–∏—Å–∏")

//     buttons = [BROADCAST, REQUIRED_JOIN, UTM, SIGNS]

// class Signs(InlineKeyboard):
//     ADD = CallbackButton("–î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å—å")
//     SHOW = CallbackButton("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥–ø–∏—Å–∏")

//     buttons = [ADD, SHOW, BACK_BUTTON]

// class SignMenu(InlineKeyboard):
//     DELETE = CallbackButton("–£–¥–∞–ª–∏—Ç—å", "delete-sign:{id}")

//     def __init__(self, sign_id: str):
//         button = self.DELETE.format(id=sign_id)
//         super().__init__(button)

// class Cancel(InlineKeyboard):
//     buttons = [BACK_BUTTON]

// class RequiredJoin(InlineKeyboard):
//     SELECT_CHANNEL = CallbackButton("–í—ã–±—Ä–∞—Ç—å –∫–∞–Ω–∞–ª")
//     DISABLE = CallbackButton("–û—Ç–∫–ª—é—á–∏—Ç—å")

//     buttons = [SELECT_CHANNEL]

//     def __init__(self, disabled: bool):
//         buttons = [] if disabled else [self.DISABLE]
//         super().__init__(*buttons, BACK_BUTTON)

// PICTURE_MENU = PictureMenu()
// ADMIN_MENU = AdminMenu()
// CANCEL = Cancel()
// SIGNS = Signs()
